@startuml

== Initialization ==
main -> converter : new converter ()
activate converter #FFBBBB
main -> converter : initialize (config_directory)
activate converter
converter -> converter : loadconfig (config_directory)
converter -> downdriver : new downdriver ()
activate downdriver #FFBBBB
converter -> downdriver : initialize (option)
activate downdriver
downdriver -> converter : true or false
destroy downdriver

converter -> updriver : new updriver ()
activate updriver #FFBBBB
converter -> updriver : initialize (option)
activate updriver
updriver -> converter : true or false
destroy updriver
converter -> main : true or false
destroy converter

... time delay ...
== Processing ==
alt message arrival to downdriver
note over main
  message arrival to downdriver
end note
main -> downdriver : wakeup ()
activate downdriver
downdriver -> downdriver : processmessage ()
downdriver -> main : ture or false
destroy downdriver
...
else message arrival to updriver
note over main
  message arrival to updriver
end note
main -> updriver : wakeup ()
activate updriver
updriver -> updriver : processmessage ()
updriver -> main : ture or false
destroy updriver
...
else timeout
note over main
  timeout
end note
end
main -> converter : wakeup ()
activate converter
converter -> downdriver : preprocess()
activate downdriver
note over downdriver
  Reading Observations, Motor Position & Status, Switch Status
end note
downdriver -> converter : true or false
destroy downdriver
converter -> updriver : preprocess()
activate updriver
note over updriver
  Reading Commands
end note
updriver -> converter : true or false
destroy updriver

loop until NoDeviceException(downdriver.getdevice)
  converter -> downdriver : getdevice(index)
  activate downdriver
  downdriver -> converter : downdevice
  destroy downdriver
  converter -> converter : findindex(downdevice.getid())
  converter -> updriver : getdevice(newindex)
  activate updriver
  updriver -> converter : updevice
  destroy updriver
end

converter -> downdriver : postprocess()
activate downdriver
note over downdriver
  Executing Commands
end note
downdriver -> converter : true or false
converter -> updriver : postprocess()
activate updriver
note over updriver
  Writing Observations, Motor Position & Status, Switch Status
end note
updriver -> converter : true or false
destroy updriver

converter -> main : true or false
destroy converter
... sleep ...

== Finalization ==
... kill signal ...
main -> converter : finalize ()
activate converter
converter -> updriver : finalize ()
activate updriver
updriver -> converter : true or false
destroy updriver
converter -> updriver : delete
destroy updriver
converter -> downdriver : finalize ()
activate downdriver
downdriver -> converter : true or false
destroy downdriver
converter -> downdriver : delete
destroy downdriver
destroy converter
main -> converter : delete
destroy converter

@enduml
