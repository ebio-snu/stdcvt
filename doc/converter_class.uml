@startuml

scale 1920*1080

package "StdCvt Driver Template" {
    class CvtOption {
        + string readconfig (string key)
        .. Jasson Wrapper ..
    }

    class CvtDriverFactory <<static>> {
        + CvtDriver generate (string configfile);
    }

    enum stat_t {
      ON
      OFF
      OPEN
      CLOSE
      STOP
    }

    enum devtype_t {
      SENSOR
      MOTOR
      SWITCH
    }

    enum unit_t {
      PERCENTAGE
      CELCIUS
      ...
    }

    abstract class CvtDriver {
     - Device devices[]

     .. Company, Model, Simple Version ..
     + virtual string getversion ();
     + virtual string getmodel ();
     + virtual string getcompany ();
     + virtual int getcompanycode ();
     + virtual int getmodelcode ();

     .. Life cycle ..
     + virtual int initialize (StdCvtOption option);
     + virtual int finalize ();
     + virtual int preprocess (); // read sensor data, read commands
     + virtual int postprocess (); // write sensor data, execute commands

     .. Process ..
     + virtual Device getdevice (int index);
    }

    abstract class Device {
     - id : int
     - status : stat_t
     - errno : int
     - errmsg : string
     - devtype : devtype_t
     - unit : unit_t

     .. Device ID ..
     + virtual int getid ();

     .. Device Status ..
     + virtual stat_t getstatus ();
     + virtual int geterrno ();
     + virtual string geterrmsg ();

     .. Device Type ..
     + virtual devtype_t gettype (); // Sensor, Motor, Switch, Controller
     + virtual unit_t getunit ();
     + virtual unit_t setunit (unit_t unit);

     .. Data Flow ..
     + virtual bool stream(Device downdevice);
    }

    class Sensor {
     + double writeobservation (double value);
     + double readobservation ();
     + bool stream(Sensor down);
    }

    class Motor {
     + double getcurrentposition ();
     + double gettargetposition ();
     + int setposition (double position);
     + int setstop ();
     + bool stream(Motor down);
    }

    class Switch {
     + int seton ();
     + int setoff ();
     + bool stream(Switch down);
    }

    Device <|-- Sensor
    Device <|-- Motor
    Device <|-- Switch

    CvtDriver *-- Device
}

package "CvtDriver for B Company" #DDDDDD {
    class BCompCvtDriver {
    }

    CvtDriver <|-- BCompCvtDriver

    class BCompSensor {
    }

    class BCompMotor {
    }

    class BCompSwitch {
    }

    Sensor <|-- BCompSensor
    Motor <|-- BCompMotor
    Switch <|-- BCompSwitch

    BCompCvtDriver *-- BCompSensor
    BCompCvtDriver *-- BCompMotor
    BCompCvtDriver *-- BCompSwitch
}
@enduml
