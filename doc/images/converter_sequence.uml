@startuml

== Initialization ==
main -> converter : new converter ()
activate converter #FFBBBB
main -> converter : initialize (config_directory)
activate converter
converter -> converter : loadconfig (config_directory)
converter -> dsdriver : new dsdriver ()
activate dsdriver #FFBBBB
converter -> dsdriver : initialize (option)
activate dsdriver
dsdriver -> converter : true or false
destroy dsdriver

converter -> ssdriver : new ssdriver ()
activate ssdriver #FFBBBB
converter -> ssdriver : initialize (option)
activate ssdriver
ssdriver -> converter : true or false
destroy ssdriver
converter -> main : true or false
destroy converter

... time delay ...
== Processing ==
alt message arrival to dsdriver
note over main
  message arrival to dsdriver
end note
main -> dsdriver : wakeup ()
activate dsdriver
dsdriver -> dsdriver : processmessage ()
dsdriver -> main : ture or false
destroy dsdriver
...
else message arrival to ssdriver
note over main
  message arrival to ssdriver
end note
main -> ssdriver : wakeup ()
activate ssdriver
ssdriver -> ssdriver : processmessage ()
ssdriver -> main : ture or false
destroy ssdriver
...
else timeout
note over main
  timeout
end note
end
main -> converter : wakeup ()
activate converter
converter -> dsdriver : preprocess()
activate dsdriver
note over dsdriver
  Reading Observations, Motor Position & Status, Switch Status
end note
dsdriver -> converter : true or false
destroy dsdriver
converter -> ssdriver : preprocess()
activate ssdriver
note over ssdriver
  Reading Commands
end note
ssdriver -> converter : true or false
destroy ssdriver

loop until NoDeviceException(dsdriver.getdevice)
  converter -> dsdriver : getdevice(index)
  activate dsdriver
  dsdriver -> converter : device
  destroy dsdriver
  converter -> ssdriver : sharedevice(device)
  activate ssdriver
  ssdriver -> converter : true or false
  destroy ssdriver
end

loop until NoCommandException(ssdriver.getcommand)
  converter -> ssdriver : getcommand(index)
  activate ssdriver
  ssdriver -> converter : command
  destroy ssdriver
  converter -> dsdriver : control(command)
  activate dsdriver
  dsdriver -> converter : true or false
  destroy dsdriver
end

converter -> dsdriver : postprocess()
activate dsdriver
note over dsdriver
  Executing Commands
end note
dsdriver -> converter : true or false
converter -> ssdriver : postprocess()
activate ssdriver
note over ssdriver
  Writing Observations, Motor Position & Status, Switch Status
end note
ssdriver -> converter : true or false
destroy ssdriver

converter -> main : true or false
destroy converter
... sleep ...

== Finalization ==
... kill signal ...
main -> converter : finalize ()
activate converter
converter -> ssdriver : finalize ()
activate ssdriver
ssdriver -> converter : true or false
destroy ssdriver
converter -> ssdriver : delete
destroy ssdriver
converter -> dsdriver : finalize ()
activate dsdriver
dsdriver -> converter : true or false
destroy dsdriver
converter -> dsdriver : delete
destroy dsdriver
destroy converter
main -> converter : delete
destroy converter

@enduml
